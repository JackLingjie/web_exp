// Ê£ÄÊü•ÊòØÂê¶ÊîØÊåÅÂáèÂ∞ëÂä®Áîª
const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

// Èü≥È¢ëÂ§ÑÁêÜ
let bgMusic = null;
let isMusicPlaying = false;

// Èü≥È¢ë‰∏ä‰∏ãÊñá
let audioContext;
const bgm = document.getElementById('bgm');
bgm.volume = 0.4;

// ÂàùÂßãÂåñÈü≥È¢ë‰∏ä‰∏ãÊñá
function initAudio() {
    // ÊöÇÊó∂Á¶ÅÁî®Èü≥È¢ëÂäüËÉΩ
    console.log('Èü≥È¢ëÂäüËÉΩÂ∑≤ÊöÇÊó∂Á¶ÅÁî®');
    return;
}

// Ê®°ÊÄÅÊ°ÜÂ§ÑÁêÜ
function showModal(message, duration = 2000) {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.textContent = message;
    document.body.appendChild(modal);

    setTimeout(() => {
        modal.classList.add('show');
    }, 100);

    setTimeout(() => {
        modal.classList.remove('show');
        setTimeout(() => modal.remove(), 300);
    }, duration);
}

// ÊòæÁ§∫Ê®°ÊÄÅÊ°ÜÈìæ
async function showModals() {
    try {
        await Swal.fire({
            title: 'ÂáÜÂ§áÂ•ΩÊâìÂºÄ‰∫ÜÂêóÔºü',
            text: 'ÁÇπÂáª Yes ÁªßÁª≠',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            confirmButtonColor: '#ff80bf',
            allowOutsideClick: false
        });

        await Swal.fire({
            title: '‰Ω†Á°ÆÂÆöÂáÜÂ§áÂ•Ω‰∫ÜÂêóÔºü',
            text: 'ÂÜçÁ°ÆËÆ§‰∏Ä‰∏ã',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Á°ÆÂÆö',
            cancelButtonText: 'ÂÜçÊÉ≥ÊÉ≥',
            confirmButtonColor: '#ff80bf',
            allowOutsideClick: false
        });

        await Swal.fire({
            title: 'ÈÇ£Êàë‰ª¨ÂºÄÂßã‰∫ÜÔºÅ',
            icon: 'success',
            confirmButtonText: 'ÂºÄÂßã',
            confirmButtonColor: '#ff80bf',
            allowOutsideClick: false
        });

        // ÂºÄÂßãÂä®ÁîªÂ∫èÂàó
        startTimeline();
    } catch (error) {
        // Áî®Êà∑ÂèñÊ∂àÔºåËøîÂõûÈ¶ñÈ°µ
        location.href = 'index.html';
    }
}

// ÂàùÂßãÂåñÊâìÂ≠óÊïàÊûú
function initTyped() {
    const typed = new Typed('.typed-text', {
        strings: [
            'WaitüòúÔºåËØ∑Ê£ÄÊü•‰∏Ä‰∏ãÊúâÊ≤°ÊúâÊääÊâãÊú∫Â£∞Èü≥ÊâìÂºÄüòÄ',
            'ÈÇ£Êàë‰ª¨Â∞±ÂºÄÂßã‰∫ÜÔºÅ'
        ],
        typeSpeed: 50,
        backSpeed: 30,
        backDelay: 2000,
        showCursor: false,
        onComplete: () => {
            initAudio();
            showModals();
        }
    });
}

// ËõãÁ≥ïÂä®Áîª
function animateCake() {
    const cake = document.querySelector('.cake');
    if (!cake) return;

    const timeline = anime.timeline({
        easing: 'easeOutElastic(1, .5)'
    });

    timeline
        .add({
            targets: cake,
            opacity: [0, 1],
            translateY: [100, 0],
            duration: 2000
        })
        .add({
            targets: '.candle .flame',
            scale: [0.8, 1.2],
            opacity: [0.8, 1],
            duration: 1000,
            direction: 'alternate',
            loop: true
        }, '-=1000');
}

// ÁÉüËä±Âä®Áîª
function initFireworks() {
    const canvas = document.getElementById('fireworksCanvas');
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    const particleCount = window.innerWidth <= 414 ? 50 : 100;
    let lastTime = 0;

    function createParticle(x, y) {
        return {
            x,
            y,
            vx: (Math.random() - 0.5) * 8,
            vy: (Math.random() - 0.5) * 8,
            radius: Math.random() * 2 + 1,
            color: `hsl(${Math.random() * 360}, 50%, 50%)`,
            alpha: 1,
            life: 1
        };
    }

    function animate(currentTime) {
        if (!lastTime) lastTime = currentTime;
        const deltaTime = currentTime - lastTime;
        lastTime = currentTime;

        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        particles.forEach((particle, i) => {
            particle.x += particle.vx * (deltaTime / 16);
            particle.y += particle.vy * (deltaTime / 16);
            particle.life -= 0.01;
            particle.alpha = particle.life;

            ctx.beginPath();
            ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
            ctx.fillStyle = `hsla(${particle.color}, ${particle.alpha})`;
            ctx.fill();

            if (particle.life <= 0) {
                particles.splice(i, 1);
            }
        });

        if (particles.length < particleCount) {
            particles.push(createParticle(
                Math.random() * canvas.width,
                Math.random() * canvas.height
            ));
        }

        requestAnimationFrame(animate);
    }

    animate(0);

    // Á™óÂè£Â§ßÂ∞èÊîπÂèòÊó∂ÈáçÁΩÆÁîªÂ∏É
    window.addEventListener('resize', () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });
}

// Ê∞îÁêÉÂä®Áîª
function createBalloons() {
    const container = document.getElementById('balloonsContainer');
    if (!container) return;

    const colors = ['#ff80bf', '#ff69b4', '#ff1493', '#ff69b4'];
    const count = window.innerWidth <= 414 ? 5 : 10;

    for (let i = 0; i < count; i++) {
        const balloon = document.createElement('div');
        balloon.className = 'balloon';
        balloon.style.left = `${Math.random() * 100}%`;
        balloon.style.bottom = '-50px';
        balloon.style.background = colors[Math.floor(Math.random() * colors.length)];
        balloon.style.animationDelay = `${Math.random() * 2}s`;
        container.appendChild(balloon);
    }
}

// ÂàùÂßãÂåñ‰∫îÂΩ©Á∫∏Â±ë
function initConfetti() {
    const jsConfetti = new JSConfetti();
    jsConfetti.addConfetti({
        emojis: ['üéâ', 'üéä', 'üéÇ', 'üéÅ', 'üéà'],
        emojiSize: 50,
        confettiNumber: 100
    });
}

// ÂºÄÂßãÂä®ÁîªÊó∂Èó¥Á∫ø
function startTimeline() {
    // ÂàùÂßãÂåñÊâÄÊúâÂä®Áîª
    animateCake();
    initFireworks();
    createBalloons();
    initConfetti();

    // ÊòæÁ§∫Ê®°ÊÄÅÊ°Ü
    showModal('ÁîüÊó•Âø´‰πêÔºÅüéâ', 3000);
}

// È°µÈù¢Âä†ËΩΩÂÆåÊàêÂêéÂàùÂßãÂåñ
document.addEventListener('DOMContentLoaded', () => {
    initTyped();
});